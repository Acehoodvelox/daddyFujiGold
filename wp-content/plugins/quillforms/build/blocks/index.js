this.qf=this.qf||{},this.qf.blocks=function(t){var e={};function r(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)r.d(n,o,function(e){return t[e]}.bind(null,o));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=193)}({193:function(t,e,r){"use strict";r.r(e),r.d(e,"setBlockAdminSettings",(function(){return y})),r.d(e,"setBlockRendererSettings",(function(){return m})),r.d(e,"registerBlockType",(function(){return k})),r.d(e,"getBlockType",(function(){return O})),r.d(e,"sanitizeBlocks",(function(){return j})),r.d(e,"sanitizeBlockAttributes",(function(){return T}));var n={};r.r(n),r.d(n,"setBlockRendererSettings",(function(){return l})),r.d(n,"setBlockAdminSettings",(function(){return u})),r.d(n,"addBlockTypes",(function(){return a}));var o={};r.r(o),r.d(o,"getBlockTypes",(function(){return p})),r.d(o,"getBlockType",(function(){return d})),r.d(o,"getBlockSupport",(function(){return b})),r.d(o,"hasBlockSupport",(function(){return f}));var i=r(2),s=r(4);const c={unknown:{title:"Unknown",supports:{editable:!0,description:!0,attachment:!0,required:!1,logic:!0},logicalOperators:["is","is_not","starts_with","greater_than","lower_than","ends_with","contains","not_contains"]}};const l=(t,e)=>({type:"SET_BLOCK_RENDERER_SETTINGS",settings:t,name:e}),u=(t,e)=>({type:"SET_BLOCK_ADMIN_SETTINGS",settings:t,name:e}),a=t=>({type:"ADD_BLOCK_TYPES",blockTypes:Object(s.castArray)(t)}),p=t=>t;function d(t,e){return t[e]}const b=(t,e,r)=>{const n=((t,e)=>"string"==typeof e?d(t,e):e)(t,e);return Object(s.get)(n,["supports",r])};function f(t,e,r){return!!b(t,e,r)}Object(i.registerStore)("quillForms/blocks",{actions:n,selectors:o,reducer:(t=c,e)=>{switch(e.type){case"SET_BLOCK_ADMIN_SETTINGS":case"SET_BLOCK_RENDERER_SETTINGS":const{name:r}=e;return t[r]?{...t,[r]:{...t[r],...e.settings}}:t;case"ADD_BLOCK_TYPES":return{...t,...Object(s.keyBy)(e.blockTypes,"name")}}return t}});var g=r(21);const y=(t,e)=>{e={title:"Untitled",color:"#333s",icon:"plus",controls:()=>null,...e},"string"==typeof t?Object(i.select)("quillForms/blocks").getBlockType(t)?("string"!=typeof e.color&&console.error('The "color" property must be a valid string!'),e.icon=Object(g.normalizeIconObject)(e.icon),Object(g.isValidIcon)(e.icon.src)?!e.logicControl||Object(s.isFunction)(e.logicControl)?Object(s.isFunction)(e.controls)?Object(i.dispatch)("quillForms/blocks").setBlockAdminSettings(Object(s.pick)(e,["controls","logicControl","color","icon","title"]),t):console.error('The "controls" property must be a valid function!'):console.error('The "logicControl" property must be a valid function!'):console.error('The "icon" property must be a valid function!')):console.error(`The ${t} block isn't registered. Please register it first!`):console.error("Block types must be strings.")},m=(t,e)=>{if(e={display:()=>null,...e},"string"==typeof t)if(Object(i.select)("quillForms/blocks").getBlockType(t))if(Object(s.isFunction)(e.display))if(!e.mergeTag||Object(s.isFunction)(e.mergeTag))if(!e.counterIcon||Object(s.isFunction)(e.counterIcon)){if(!e.nextBtn||Object(s.isFunction)(e.nextBtn))return Object(i.dispatch)("quillForms/blocks").setBlockRendererSettings(Object(s.pick)(e,["display","mergeTag","nextBtn","counterIcon"]),t),e;console.error('The "nextBtn" property must be a valid function!')}else console.error('The "counterIcon" property must be a valid function!');else console.error('The "mergeTag" property must be a valid function!');else console.error('The "display" property must be a valid function!');else console.error(`The ${t} block isn't registered. Please register it first!`);else console.error("Block types must be strings.")},k=(t,e)=>{if("string"!=typeof t)return void console.error("Block names must be strings.");if(Object(i.select)("quillForms/blocks").getBlockType(t))return void console.error('Block "'+t+'" is already registered.');e.supports={editable:!0,required:!0,attachment:!0,description:!0,logic:!0,...e.supports};let{attributes:r}=e;const{supports:n}=e;return r&&Object(s.isPlainObject)(r)||(r={}),n.required&&(r.required={type:"boolean",default:!1}),n.attachment&&(r.attachment={type:"object",properties:{url:{type:"string"}}}),n.description&&(r.description={type:"string",default:""}),r.label={type:"string",default:""},e.attributes=r,Object(i.dispatch)("quillForms/blocks").addBlockTypes({name:t,...Object(s.pick)(e,["attributes","supports","logicalOperators"])}),m(t,e),y(t,e),e};function O(t){return Object(i.select)("quillForms/blocks").getBlockType(t)}function T(t,e){const r=O(t);if(void 0===r)throw new Error(`Block type '${t}' is not registered.`);return Object(s.reduce)(r.attributes,(t,r,n)=>{const o=e[n];return void 0!==o?t[n]=o:r.hasOwnProperty("default")&&(t[n]=r.default),t},{})}const j=t=>Object(s.isEmpty)(t)?[]:Object(s.map)(t,t=>O(t.name)?{...t,attributes:T(t.name,t.attributes?t.attributes:{})}:{...t,name:"unknown",attributes:T("unknown",t.attributes?t.attributes:{})})},2:function(t,e){t.exports=window.wp.data},21:function(t,e){t.exports=window.qf.utils},4:function(t,e){t.exports=window.lodash}});